<template>
  <div class="app-container calendar-list-container">
    <!-- 查询区域 -->
    <div class="filter-container">
<#list columns as po>
<#if po.fieldType =='date'>
        <span>${po.filedComment}</span>
        <el-date-picker
          v-model="listQuery.${po.fieldName}"
          type="date"
          value-format="yyyy-MM-dd"
          placeholder="选择日期">
        </el-date-picker>
<#elseif po.fieldType =='time'>
        <span>${po.filedComment}</span>
        <el-time-select
          v-model="listQuery.${po.fieldName}"
          :picker-options="{
            start: '00:00',
            step: '00:15',
            end: '24:00'
          }"
          value-format="HH:mm:ss"
          placeholder="选择时间">
        </el-time-select>
<#elseif po.fieldType =='datetime'>
        <span>${po.filedComment}</span>
        <el-date-picker
          v-model="listQuery.${po.fieldName}"
          type="datetime"
          value-format="yyyy-MM-dd HH:mm:ss"
          placeholder="选择日期时间">
        </el-date-picker>
<#else>
        <el-input @keyup.enter.native="handleFilter" style="width: 200px;" class="filter-item" placeholder="请输入${po.filedComment}" v-model="listQuery.${po.fieldName}"></el-input>
</#if>
</#list>
        <el-button class="filter-item" type="primary" v-waves icon="search" @click="handleFilter">搜索</el-button>
        <el-button class="filter-item" style="margin-left: 10px;" @click="handleCreate" type="primary" icon="edit">添加</el-button>
    </div>

    <!-- table区域-begin -->
    <el-table :key='tableKey' :data="list" v-loading.body="listLoading" border fit highlight-current-row style="width: 100%">
      <el-table-column
          label="序号"
          sortable
          type="index"
          :index="(index)=>{return (index+1) + (listQuery.pageNo-1)*listQuery.pageSize}"
          align="center"
          width="50"
        />
<#list columns as po>
      <el-table-column align="center" label="${po.filedComment}"> <template slot-scope="scope">
            <span>{{scope.row.${po.fieldName}}}</span>
          </template> </el-table-column>
</#list>
      <el-table-column align="center" label="操作" width="150"> <template slot-scope="scope">
          <el-button size="small" type="success" @click="handleUpdate(scope.row)">编辑
          </el-button>
          <el-button size="small" type="danger" @click="handleDelete(scope.row)">删除
          </el-button>
        </template> </el-table-column>
    </el-table>
    <!-- table区域-end -->

    <div v-show="!listLoading" class="pagination-container">
        <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page.sync="listQuery.pageNo" :page-sizes="[10,20,30, 50]" :page-size="listQuery.pageSize" layout="total, sizes, prev, pager, next, jumper" :total="total"> </el-pagination>
    </div>
    <el-dialog :title="textMap[dialogStatus]" :visible.sync="dialogFormVisible">
      <el-form :model="form" :rules="rules" ref="form" label-width="100px">
<#list columns as po>
        <el-form-item label="${po.filedComment}" prop="${po.fieldName}">
          <el-input v-model="form.${po.fieldName}" placeholder="请输入${po.filedComment}"></el-input>
        </el-form-item>
</#list>
      </el-form>
      <div scope="footer" class="dialog-footer">
        <el-button @click="cancel('form')">取 消</el-button>
        <el-button v-if="dialogStatus=='create'" type="primary" @click="create('form')">确 定</el-button>
        <el-button v-else type="primary" @click="update('form')">确 定</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
  import {
    get${entityName}PageList,
    generate${entityName},
    change${entityName}ById,
    expurgate${entityName},
    expurgate${entityName}Batch,
    get${entityName}ById
  } from 'api/${entityPackage}/${vuePackage}';

  export default {
    name: '${entityName?uncap_first}',
    data() {
      return {
        form: {
<#list columns as po>
          ${po.fieldName}: undefined,
</#list>
        },
        rules: {
        },
        list: null,
        total: null,
        listLoading: true,
        listQuery: {
            pageNo: 1,
            pageSize: 10
        },
        dialogFormVisible: false,
        dialogStatus: '',
        textMap: {
          update: '编辑',
          create: '创建'
        },
        tableKey: 0
      }
    },
    created() {
      this.getList();
    },
    methods: {
      getList() {
        this.listLoading = true;
        get${entityName}PageList(this.listQuery).then(response => {
          this.list = response.result.records;
          this.total = response.result.total;
          this.listLoading = false;
        })
      },
      handleFilter() {
        this.getList();
      },
      handleCreate() {
        this.resetTemp();
        this.dialogStatus = 'create';
        this.dialogFormVisible = true;
      },
      handleUpdate(row) {
        get${entityName}ById(row.id)
          .then(response => {
            this.form = response.result;
            this.dialogFormVisible = true;
            this.dialogStatus = 'update';
          });
      },
      handleDelete(row) {
        this.$confirm('此操作将永久删除, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        })
          .then(() => {
            expurgate${entityName}(row.id)
              .then(() => {
                this.$notify({
                  title: '成功',
                  message: '删除成功',
                  type: 'success',
                  duration: 2000
                });
                const index = this.list.indexOf(row);
                this.list.splice(index, 1);
              });
          });
      },
      handleSizeChange(val) {
        this.listQuery.limit = val;
        this.getList();
      },
      handleCurrentChange(val) {
        this.listQuery.page = val;
        this.getList();
      },
      cancel(formName) {
        this.dialogFormVisible = false;
        this.$refs[formName].resetFields();
      },
      update(formName) {
        const set = this.$refs;
        set[formName].validate(valid => {
          if (valid) {
            this.dialogFormVisible = false;
            change${entityName}ById(this.form).then(() => {
              this.dialogFormVisible = false;
              this.getList();
              this.$notify({
                title: '成功',
                message: '创建成功',
                type: 'success',
                duration: 2000
              });
            });
          } else {
            return false;
          }
        });
      },
      resetTemp() {
        this.form = {
<#list columns as po>
          ${po.fieldName}: undefined,
</#list>
        };
      }
    }
  }
</script>

<style scoped>
</style>